# Namespace in which resources are to be deployed
namespace: prod-app

# Secret to pull the image from private image repo
SecretRegistry: gitlab-secret
SecretData:
  encryptedsecret: eyJhdXRoscyI6saeyJyZWdpc3RyeSa5naXadaRsYWIuY29tIjp7InVzZXJuYW1lIjoibWVobW9vZCIsInBhc3N3b3JkIjoiZ2xwYXQtbXlpbXJGeDFjclVSejZCTXJGR3YisLCJlbWFpbCI6Im0uYWxpQJhbCd5jb20iLCJhdXRoXOXZaRHBuYkhCaGRDMXRlV2x0Y2taNE1XTnlWVkoaqwojgfnghkZz09In19fQ==  #NEVER STORE IN REPOS ALWAYS MAINTAIN/MODIFY LOCALLY IF NEEDED STORE IN PLATFORM MANAGED SECRETS

#Volume mount for dynamic data generated by the web app itself  
PvcDataApp:
  volumename: app-pv-claim
  scname: scname # i.e. nfs server/aws volume etc.
  size: 2Gi
  mode: ReadWriteOnce 

# service for the webapp
ServiceforApp:
  name: prod-app-service
  type: ClusterIP
  port: 80
  targetport: 80
  app: prod-app
  portname: prod-app-port

# Deployment for the web app  
DepforApp:
  name: prod-app-deployment
  app: prod-app
  containername: dev-app-container
  image: registry.sadapay.com/project/image
  cmname: prod-app-config
  port: 80
  mountpath: /data/db
  replicas: 1
  readonly: true

# Bearer token to be utilized by the web app to communicate with secure endpoints
# There are multiple ways to do this 
# Method 1: Create a secret with bearer token and inject via volume into a file in container
# Method 2: Create a secret with bearer token content and reference in envFrom of deployment file
# Method 3: Create a CM with bearer token content and inject in deployment file ( insecure and not recommended )  
SecretBearerTokenName: bearer-token-app
SecretPath: /path/inside/container/
Tokendata:
  token: abcdefghijk......  

# Secret for the TLS/SSL Certificate to be used in ingress for https comms.
SecretTlsName: secret-certificate
SecretData:
  crt: < contents of crt >  #NEVER COMMIT IN REPOS HANDLE THIS MANUALLY/LOCALLY OR IF NEEDED STORE IN PLATFORM MANAGED SECRETS
  key: < contents of key >  #NEVER COMMIT IN REPOS HANDLE THIS MANUALLY/LOCALLY OR IF NEEDED STORE IN PLATFORM MANAGED SECRETS

# Defining env variables of web app, these will be referenced in the deployment
ConfigMapName: app-config
ConfigMapData: 
  var1: value1
  var2: value2
  varn: valuen

#Image repository details
Image:
  repository: registry.sadapay.com/project/image
  tag: latest
  imagePullPolicy: Always
  name: prod-app
  imagePullSecrets: gitlab-secret

#Ingress to handle the external traffic and route to ClusterIP service
Ingress:
  name: myapp-prod-ingress
  path: /
  pathtype: Prefix
  host: prod.sadapay.com
  secretname: secret-certificate # for SSL certificate of web app 
